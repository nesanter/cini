prefix = /usr/local
baseflags = -Wall -flto -Iinclude/ini
sanflags = -fsanitize=address,undefined
libs = -lJudy

include active.gen.ninja

defines = -DVERSION="\"$version\"" $defines

rule cc
  deps = gcc
  depfile = $out.d
  command = gcc -MMD -MF $out.d $cflags $defines $in -c -o $out

rule bin
  deps = gcc
  depfile = $out.d
  command = gcc -MMD -MF $out.d $cflags $defines $in -o $out $libs

rule so
  deps = gcc
  depfile = $out.d
  command = gcc -MMD -MF $out.d -fPIC $cflags $defines -shared $in -o $out

rule no-ninja
  command = ninja -t commands > $out

rule archive
  command = git archive -o $out HEAD

# ...sources
build out/ini.o: cc src/ini.c | active.gen.ninja
build out/map.o: cc src/map.c | active.gen.ninja
build out/handle.o: cc src/handle.c | active.gen.ninja
build out/tojson.o: cc src/tojson.c | active.gen.ninja
build out/reduce.o: cc src/reduce.c | active.gen.ninja
build out/test.o: cc src/test.c | active.gen.ninja

# ...outputs
build test: bin out/test.o out/ini.o out/map.o out/handle.o | active.gen.ninja
build ini-merge: bin out/reduce.o out/ini.o out/map.o | active.gen.ninja
build ini-tojson: bin out/tojson.o out/ini.o out/map.o out/handle.o | active.gen.ninja
  libs = $libs -ljansson

build libini.so: so out/ini.o out/map.o out/handle.o | active.gen.ninja

# ...toplevel
build tools: phony ini-merge ini-tojson
build all: phony test tools libini.so
default all

# ...packaging
build dist: phony pkg/no-ninja
build pkg/no-ninja: no-ninja | active.gen.ninja
